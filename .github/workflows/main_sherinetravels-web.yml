name: Build and Deploy Next.js Frontend to Azure

on:
  push:
    branches:
      - main   # change if your frontend branch is different
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/web/package-lock.json'

      - name: Verify package-lock.json exists
        working-directory: ./frontend/web
        run: |
          ls -la package-lock.json
          echo "Package-lock.json found, proceeding with npm ci"
      
      - name: Install dependencies
        working-directory: ./frontend/web
        run: npm ci

      - name: Build Next.js app
        working-directory: ./frontend/web
        run: npm run build

      - name: Prepare deployment package
        working-directory: ./frontend/web
        run: |
          mkdir -p ../deploy
          cp -r .next package.json public ../deploy
          [ -f next.config.mjs ] && cp next.config.mjs ../deploy || true
          [ -f next.config.js ] && cp next.config.js ../deploy || true
          cd ../deploy
          zip -r ../webapp.zip .

      - name: Azure login (using AZURE_CREDENTIALS JSON)
        if: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE == '' && secrets.AZURE_CREDENTIALS != '' }}
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure login (using client secret)
        if: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE == '' && secrets.AZURE_CREDENTIALS == '' && secrets.AZURE_CLIENT_ID != '' && secrets.AZURE_TENANT_ID != '' && secrets.AZURE_SUBSCRIPTION_ID != '' && secrets.AZURE_CLIENT_SECRET != '' }}
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      - name: Azure login (OIDC - no secret)
        if: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE == '' && secrets.AZURE_CREDENTIALS == '' && secrets.AZURE_CLIENT_SECRET == '' && secrets.AZURE_CLIENT_ID != '' && secrets.AZURE_TENANT_ID != '' && secrets.AZURE_SUBSCRIPTION_ID != '' }}
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy via Publish Profile (no login needed)
        if: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE != '' }}
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sherinetravels-web'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ./frontend/deploy/webapp.zip

      - name: Deploy via Service Principal / OIDC
        if: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE == '' && (secrets.AZURE_CREDENTIALS != '' || (secrets.AZURE_CLIENT_ID != '' && secrets.AZURE_TENANT_ID != '' && secrets.AZURE_SUBSCRIPTION_ID != '')) }}
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sherinetravels-web'
          slot-name: 'Production'
          package: ./frontend/deploy/webapp.zip

      - name: Skip deploy (no credentials available)
        if: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE == '' && secrets.AZURE_CREDENTIALS == '' && secrets.AZURE_CLIENT_ID == '' }}
        run: |
          echo "Skipping deploy: no Azure credentials or publish profile provided."
